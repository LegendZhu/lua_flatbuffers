include "monster_test.fbs";

struct scalar_types
{
	int8_min:byte;
	int8_max:byte;
	uint8_min:ubyte;
	uint8_max:ubyte;

	int16_min:short;
	int16_max:short;
	uint16_min:ushort;
	uint16_max:ushort;

	int32_min:int;
	int32_max:int;
	uint32_min:uint;
	uint32_max:uint;

	int64_min:long;
	int64_max:long;
	uint64_min:ulong;
	uint64_max:ulong;

	double_min:double;
	double_max:double;
}

struct test_struct
{
	nested_struct:scalar_types;
}

table vec
{
	x:int;
	y:int;
	z:int;
}

struct stc
{
	x:int;
	y:int;
	z:int;
}

// vector of union types not supported (wrap in table first)
table test_table
{
	scalar:scalar_types;
	str:string;
	utest:MyGame.Example.Any;
	vstr:[string];
	vtable:[vec];
	vstruct:[stc];
}

// only tables can be union elements
union mix_uion { test_table }

table test
{
	test1:test_struct;
	test2:test_table;
	mix_uions:mix_uion;
}

root_type test;

file_extension "bfbs";
